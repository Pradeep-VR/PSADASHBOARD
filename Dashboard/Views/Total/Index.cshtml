@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewBag.Title = "TotalIndex";
    var mId = ViewBag.Id;
    var Name = "TOTAL CONSUMPTION'S | Bar Graph";
    ViewBag.Heading = Name;
}



<link href="~/css/totalindex.css" rel="stylesheet" />

<div class="ovDiv">
    <div style="margin:10px;width:250px;">
        <label class="lablell" style=" color: forestgreen; font-weight: bold;" for="FromDate">GROUPS</label>
        <select class="form-select" id="ddlGroups" onchange="ddlGroupChange()" style="margin:5px;">
        </select>
    </div>

    <div style="margin: 10px; width: 250px; display:none;">
        <label class="lablell" style=" color: forestgreen; font-weight: bold;" for="FromDate">METERS</label>
        <select class="form-select" id="ddlMeters" disabled="disabled" style="margin:5px;width:auto;"></select>
    </div>

    <div style="margin:10px">
        <label class="lablell" style=" color: forestgreen; font-weight: bold;" for="FromDate">From Date:</label>
        <input class="inputt" type="datetime-local" id="Fdate" style="margin-top:7px;" name="fromdate">
    </div>

    <div style="margin:10px">
        <label class="lablell" style=" color: forestgreen; font-weight: bold;" for="ToDate">To Date:</label>
        <input class="inputt" type="datetime-local" id="Tdate" style="margin-top:7px;" name="todate">
    </div>

    <div style="margin:10px;">
        <button id="viewButton" style="width: 100px;height: 30px;background-color: forestgreen;color: white;border: 0;border-radius: 5px;margin-top: 35px;"
                onclick="ViewBtn_Clicked()">
            View
        </button>
    </div>

</div>

<canvas id="myLineChart" width="380" height="120" style="overflow:auto;" onclick="toggleControls1()"></canvas>

@section Scripts {
    <script src="~/lib/jquery/jquery.min.js"></script>
    <script src="~/lib/bootstrap/bootstrap.bundle.min.js"></script>
    <script src="~/lib/echarts/echarts.min.js"></script>
    <script src="~/lib/bootstrap/bootstrap.min.js"></script>
    <script src="~/js/linechart.js"></script>
    <script src="~/js/chart.js"></script>
    <script>
        var barChart;
        const loadData = [10, 20, 30, 40];
        const loadNameData = ["Load", "Load", "Load", "Load"];

        $(document).ready(function () {
            LoadGroups();
            BarGraphOnload('All', '', '');
        });

        function ddlGroupChange() {
            var ddlGroupData = document.getElementById('ddlGroups');
            var ddlGroupselected = ddlGroupData.options[ddlGroupData.selectedIndex];
            var ddlGroup = ddlGroupselected.value;
            if (ddlGroup != 'All') {
                document.getElementById('ddlMeters').removeAttribute("disabled");
                LoadMeters(ddlGroup);

                var ddlGroupData = document.getElementById('ddlGroups');
                var ddlGroupselected = ddlGroupData.options[ddlGroupData.selectedIndex];
                var ddlGroup = ddlGroupselected.value;

                BarGraphOnload(ddlGroup, '', '');
            } else {
                document.getElementById('ddlMeters').setAttribute("disabled", "disabled");
            }

        }

        function LoadGroups() {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetGroupsWithMeters", "Home")',
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    var html = `<option value='All'>Select All</option>`;
                    for (var i = 0; i < response.length; i++) {
                        var group = response[i];
                        html += `<option value='${group.groupId}'>${group.groupName}</option>`;
                    }
                    $('#ddlGroups').html(html);
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }


        function LoadMeters(strId) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetMetersName", "Home")',
                contentType: "application/json; charset=utf-8",
                data: { Groupid: strId },
                success: function (getmetersname) {
                    var html = `<option value='All'>Select All</option>`;
                    for (var i = 0; i < getmetersname.mmaster.length; i++) {
                        var meter = getmetersname.mmaster[i];
                        html += `<option value='${meter.meterid}'>${meter.metername}</option>`;
                        $('#ddlMeters').html(html);
                    }
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }

        function ViewBtn_Clicked() {
            loadData.length = 0;
            loadNameData.length = 0;

            var ddlGroupData = document.getElementById('ddlGroups');
            var ddlGroupselected = ddlGroupData.options[ddlGroupData.selectedIndex];
            var ddlGroup = ddlGroupselected.value;

            var fDate = document.getElementById('Fdate').value;
            var tDate = document.getElementById('Tdate').value;
            if (fDate == "" && tDate == "") {
                alert("Please select the Group's / Date's.....!");
            } else {
                BarGraphOnload(ddlGroup, fDate, tDate);
            }

        }

        function BarGraphOnload(id, startdate, enddate) {
            loadData.length = 0;
            loadNameData.length = 0;
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetGroupsData", "Total")',
                data: { strGroup: id, strStartD: startdate, strEndD: enddate },
                success: function (response) {
                    if (response) {
                        var meterNames = response.groupname;
                        var meterConsumptions = response.groupcons;
                        if (Array.isArray(meterNames) && Array.isArray(meterConsumptions)) {
                            meterNames.forEach(function (name, index) {
                                loadNameData.push(name);
                                loadData.push(meterConsumptions[index]);
                                BarGraph(loadData, loadNameData);
                            });
                        }

                    } else {
                        alert('Response Empty...');
                    }

                },
                error: function (err) {
                    alert(`Error : ${err}`);
                }
            });
        }

        function GetBarGraphData(metId, SDate, EDate) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetMetersReadings", "Total")',
                data: { strId: metId, strFDate: SDate, strTDate: EDate },
                success: function (response) {
                    if (response) {
                        var meetrname = response.name;
                        var meetrCons = response.data;
                        loadNameData.push(meetrname);
                        loadData.push(meetrCons);
                        BarGraph(loadData, loadNameData);
                    } else {
                        alert('Response Empty...');
                    }

                },
                error: function (err) {
                    alert(`Error : ${err}`);
                }
            });
        }

        // Bar Chart Script Function
        function BarGraph(arrData, arrNData) {
            const data = {
                labels: arrNData,
                datasets: [{
                    // Remove the label here
                    data: arrData,
                    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4CAF50'],
                    borderColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4CAF50'],
                    borderWidth: 1,
                    barThickness: 20  // Set the bar thickness here
                }]
            };

            const config = {
                type: 'bar',
                data: data,
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    },
                    plugins: {
                        legend: {
                            display: false  // Hide the legend
                        }
                    }
                }
            };

            if (barChart) {
                barChart.destroy();
            }

            barChart = new Chart(
                document.getElementById('myLineChart'),
                config
            );
        }

        // For Toggle Menu Icons Hide Only
        function toggleControls1() {
            const controls = document.querySelector('.controls');
            controls.style.display = "none";
        }

        // For Toggle Menu Icons Both Open and Hide
        function toggleControls() {
            const controls = document.querySelector('.controls');
            if (controls.style.display === "none" || controls.style.display === "") {
                controls.style.display = "flex";
            } else {
                controls.style.display = "none";
            }
        }
    </script>
}